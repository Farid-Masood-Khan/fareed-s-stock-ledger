
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yueuzwikkfwvqstfzjbj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl1ZXV6d2lra2Z3dnFzdGZ6amJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5NzA3ODAsImV4cCI6MjA2MTU0Njc4MH0.7vC8YAj79-x4bs0K6P8kljDcu8fGIMlFpCPHBFQZwRA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with enhanced security settings
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true, // default
    autoRefreshToken: true, // default
    storageKey: 'sb-auth-token', // You can customize the key used in storage
  },
  global: {
    // Improvement: Use a specific fetch function with timeout to avoid hanging requests
    fetch: (url, options = {}) => {
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30s timeout
      
      return fetch(url, {
        ...options,
        signal: controller.signal,
      }).finally(() => clearTimeout(timeoutId));
    }
  }
});
